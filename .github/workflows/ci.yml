name: CI
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 12 * * SUN"  # Sunday @ midday UTC
  workflow_dispatch:


# Cancel active CI runs for a PR before starting another run
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash  # https://github.com/beeware/briefcase/pull/912

env:
  FORCE_COLOR: "1"

jobs:
  unit-tests:
    name: "Run unit tests"
    runs-on: "ubuntu-latest"
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.8", "3.9", "3.9", "3.10", "3.11", "3.12", "3.13-dev" ]
        include:
          - experimental: false

          # Pre-release versions are experimental
          - python-version: "3.13-dev"
            experimental: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.1.1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install System dependencies
        run: |
          sudo apt update
          sudo apt install -y qemu-user git-lfs

      - name: Pull prebuilt binaries
        run: |
          git lfs pull

      - name: Install Python dependencies
        run: |
          pip install -e .[dev]

      - name: Run Tests
        run: |
          tox -e py

      - name: Store Coverage Data
        uses: actions/upload-artifact@v4.3.6
        with:
          name: coverage-${{ matrix.python-version }}
          path: ".coverage.*"
          if-no-files-found: ignore

  coverage:
    name: "Evaluate coverage"
    runs-on: "ubuntu-latest"

    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.7
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5.1.1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          pip install -e .[dev]

      - name: Retrieve Coverage Data
        uses: actions/download-artifact@v4.1.8
        with:
          pattern: coverage-*
          merge-multiple: true

      - name: Generate coverage report
        run: |
          tox -e coverage

      - name: Store Coverage Report
        uses: actions/upload-artifact@v4.3.6
        with:
          name: html-coverage-report
          path: htmlcov
