from collections import namedtuple

platform_uname_result_type = namedtuple('uname_result',
                    'system node release version machine processor')
_uname_result = platform_uname_result_type(
        {{repr(self.host_system)}},
        'build',
        {{repr(self.host_release)}},
        '',
        {{repr(self.host_machine)}},
        {{repr(self.host_machine)}})
def uname():
    return _uname_result

def libc_ver(*args, **kwargs):
    return ('', '')

def mac_ver(release='', versioninfo=('', '', ''), machine=''):
    if release == '':
        release = {{repr(macosx_deployment_target)}}
    if machine == '':
        machine = _uname_result.machine
    return release, versioninfo, machine

IOSVersionInfo = collections.namedtuple(
    "IOSVersionInfo",
    ["system", "release", "model", "is_simulator"]
)

def ios_ver(system="", release="", model="", is_simulator=False):
    if system == "":
        system = {{repr(self.host_system)}}
    if release == "":
        release = {{repr(self.host_release)}}
    if model == "":
        model = {{repr("iPhone" if self.host_is_simulator else "iPhone13,2")}}

    return IOSVersionInfo(system, release, model, {{repr(self.host_is_simulator)}})

# Old, deprecated functions, but we support back to 3.5
if '_linux_distribution' in globals():
    def _linux_distribution(distname, version, id, supported_dists,
            full_distribution_name):
        return ('', '', '')
